apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"
apply plugin: "com.google.gms.google-services"
apply plugin: "com.google.firebase.crashlytics"

def projectRoot = rootDir.getAbsoluteFile().getParentFile().getAbsolutePath()

react {
    entryFile = file([
        "node",
        "-e",
        "require('expo/scripts/resolveAppEntry')",
        projectRoot,
        "android",
        "absolute"
    ].execute(null, rootDir).text.trim())
    
    reactNativeDir = new File([
        "node",
        "--print",
        "require.resolve('react-native/package.json')"
    ].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()
    
    hermesCommand = new File([
        "node",
        "--print",
        "require.resolve('react-native/package.json')"
    ].execute(null, rootDir).text.trim()).getParentFile().getAbsolutePath() + "/sdks/hermesc/%OS-BIN%/hermesc"
    
    codegenDir = new File([
        "node",
        "--print",
        "require.resolve('@react-native/codegen/package.json', { paths: [require.resolve('react-native/package.json')] })"
    ].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()

    cliFile = new File([
        "node",
        "--print",
        "require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })"
    ].execute(null, rootDir).text.trim())
    bundleCommand = "export:embed"
    
    autolinkLibrariesWithApp()
}

def enableProguardInReleaseBuilds = (findProperty('android.enableProguardInReleaseBuilds') ?: false).toBoolean()
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace 'com.enatbet.app'
    
    defaultConfig {
        applicationId 'com.enatbet.app'
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        
        resValue "string", "expo_runtime_version", "1.0.0"
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        
        release {
            // For production: Generate keystore and reference it here
            // keytool -genkeypair -v -keystore enatbet.jks -keyalg RSA -keysize 2048 -validity 10000 -alias enatbet
            // Then update these paths:
            storeFile file(System.getenv('ANDROID_KEYSTORE_FILE') ?: 'debug.keystore')
            storePassword System.getenv('ANDROID_KEYSTORE_PASSWORD') ?: 'android'
            keyAlias System.getenv('ANDROID_KEY_ALIAS') ?: 'androiddebugkey'
            keyPassword System.getenv('ANDROID_KEY_PASSWORD') ?: 'android'
        }
    }

    buildTypes {
        debug {
            debuggable true
            signingConfig signingConfigs.debug
        }
        
        release {
            // Use release signing config for production
            signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            shrinkResources enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            crunchPngs (findProperty('android.enablePngCrunchInReleaseBuilds')?.toBoolean() ?: true)
        }
    }

    packagingOptions {
        jniLibs {
            useLegacyPackaging (findProperty('expo.useLegacyPackaging')?.toBoolean() ?: false)
        }
    }

    androidResources {
        ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:!CVS:!thumbs.db:!picasa.ini:!*~'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {
    implementation("com.facebook.react:react-android")
    implementation("com.facebook.react:hermes-android")
    implementation("org.webkit:android-jsc:+")

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:33.0.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-messaging'
    
    // Stripe
    implementation 'com.stripe:stripe-android:20.20.0'
}